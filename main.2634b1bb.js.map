{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","appendRow","removeRow","appendColumn","removeColumn","table","trRows","querySelectorAll","growthTable","button","append","lastElementChild","cloneNode","remove","forEach","tr","rowsLimit","length","columnsLimit","children","disabled","addEventListener","e","target","closest","contains"],"mappings":";AAAA,aA4CA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzCA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAYF,SAASC,cAAc,eACnCE,EAAYH,SAASC,cAAc,eACnCG,EAAeJ,SAASC,cAAc,kBACtCI,EAAeL,SAASC,cAAc,kBACtCK,EAAQN,SAASC,cAAc,SACjCM,EAAaD,EAAAA,EAAME,iBAAiB,OAElCC,EAAc,SAACC,GACXA,OAAAA,GACDR,KAAAA,EACHI,EAAMK,OAAOL,EAAMM,iBAAiBC,WAAU,IAC9CN,EAAaD,EAAAA,EAAME,iBAAiB,OACpC,MACGL,KAAAA,EACHG,EAAMM,iBAAiBE,SACvBP,EAAaD,EAAAA,EAAME,iBAAiB,OACpC,MACGJ,KAAAA,EACHG,EAAOQ,QAAQ,SAAAC,GACbA,EAAGL,OAAOK,EAAGJ,iBAAiBC,WAAU,MAE1C,MACGR,KAAAA,EACHE,EAAOQ,QAAQ,SAAAC,GACbA,EAAGJ,iBAAiBE,WAOpBG,IAAAA,EAAYV,EAAOW,OACnBC,EAAeZ,EAAO,GAAGa,SAASF,OAExChB,EAAUmB,SAAWJ,EAAY,EACjCd,EAAUkB,SAAWJ,EAAY,EACjCb,EAAaiB,SAAWF,EAAe,EACvCd,EAAagB,SAAWF,EAAe,GAGzCpB,EAAUuB,iBAAiB,QAAS,SAACC,GAC7Bb,IAAAA,EAASa,EAAEC,OAAOC,QAAQ,UAE3Bf,GAAWX,EAAU2B,SAAShB,IAInCD,EAAYC","file":"main.2634b1bb.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst container = document.querySelector('.container');\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst table = document.querySelector('tbody');\nlet trRows = [...table.querySelectorAll('tr')];\n\nconst growthTable = (button) => {\n  switch (button) {\n    case appendRow:\n      table.append(table.lastElementChild.cloneNode(true));\n      trRows = [...table.querySelectorAll('tr')];\n      break;\n    case removeRow:\n      table.lastElementChild.remove();\n      trRows = [...table.querySelectorAll('tr')];\n      break;\n    case appendColumn:\n      trRows.forEach(tr => {\n        tr.append(tr.lastElementChild.cloneNode(true));\n      });\n      break;\n    case removeColumn:\n      trRows.forEach(tr => {\n        tr.lastElementChild.remove();\n      });\n      break;\n    default:\n      break;\n  }\n\n  const rowsLimit = trRows.length;\n  const columnsLimit = trRows[0].children.length;\n\n  appendRow.disabled = rowsLimit > 9;\n  removeRow.disabled = rowsLimit < 3;\n  appendColumn.disabled = columnsLimit > 9;\n  removeColumn.disabled = columnsLimit < 3;\n};\n\ncontainer.addEventListener('click', (e) => {\n  const button = e.target.closest('button');\n\n  if (!button || !container.contains(button)) {\n    return;\n  }\n\n  growthTable(button);\n});\n"]}